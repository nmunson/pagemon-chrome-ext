<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> 
 
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"> 
  <head> 
    <title>Page Monitor: View Changes</title>
    <script type="text/javascript" src="lib/jquery-1.4.1.js"></script> 
    <script type="text/javascript" src="lib/difflib.js"></script>
    <script type="text/javascript" src="monitor.js"></script>
    <script type="text/javascript">
      function diff(url, src, dest) {
        var src = html2list(src.replace(/\s+/g, ' '));
        var dest = html2list(dest.replace(/\s+/g, ' '));
        var matcher = new difflib.SequenceMatcher(src, dest);
        var opcodes = matcher.get_opcodes();
        var out = [];
        
        for (var i = 0; i < opcodes.length; i++) {
          var opcode = opcodes[i][0];
          var src_start = opcodes[i][1];
          var src_end = opcodes[i][2];
          var dest_start = opcodes[i][3];
          var dest_end = opcodes[i][4];
          
          switch (opcode) {
            case 'replace':
              out = out.concat(wrapText(src.slice(src_start, src_end), '<del>', '</del>'));
              out = out.concat(wrapText(dest.slice(dest_start, dest_end), '<ins>', '</ins>'));
              break;
            case 'delete':
              out = out.concat(wrapText(src.slice(src_start, src_end), '<del>', '</del>'));
              break;
            case 'insert':
              out = out.concat(wrapText(dest.slice(dest_start, dest_end), '<ins>', '</ins>'));
              break;
            case 'equal':
              out = out.concat(dest.slice(dest_start, dest_end));
              break;
            default:
              alert('Diffing error. Please report this.');
              return;
          }
        }
        
        var compiled_html = out.join('');
        
        $('body').html(compiled_html);
        
        var link = url;
        link = '<a href="' + link + '" title="View Original Page">Original</a>';
        link = '<div id="chrome_page_monitor_ext_orig_link">' + link + '</div>';
        $(link).appendTo('body');
      }
      
      function wrapText(list, prefix, suffix) {
        var out = [];
        var buffer = [];
        
        for (var i=0; i < list.length; i++) {
          if (list[i][0] == '<') {
            if (buffer.length > 0) {
              out.push(prefix);
              out = out.concat(buffer);
              out.push(suffix);
              buffer = [];
            }
            out.push(list[i]);
          } else {
            buffer.push(list[i]);
          }
        }
        
        if (buffer.length > 0) {
          out.push(prefix);
          out = out.concat(buffer);
          out.push(suffix);
          buffer = [];
        }
        
        return out;
      }
      
      function html2list(x) {
        var CHAR = 0;
        var TAG = 1;
        var mode = CHAR;
        var cur = '';
        var out = [];
        
        for (var i = 0; i < x.length; i++) {
          var c = x[i];
          
          if (mode == TAG) {
            cur += c;
            if (c == '>') {
              out.push(cur);
              cur = '';
              mode = CHAR;
            }
          } else if (mode == CHAR) {
            if (c == '<') {
              out.push(cur);
              cur = c;
              mode = TAG;
            } else if (x.slice(i, i + 2).match(/^.\b.$/)) {
              out.push(cur + c);
              cur = '';
            } else {
              cur += c;
            }
          }
        }
        out.push(cur);
        
        var filtered = [];
        
        for (var i = 0; i < out.length; i++) {
          if (out[i] != '') filtered.push(out[i]);
        }
        
        return filtered;
      }
      
      function startDiff(url, src, dest) {
        // Get base.
        var base = url;
        var src_base = src.match(/<base[^>]*href=['"]?([^>'"]+)[^>]*>/i);
        var dest_base = src.match(/<base[^>]*href=['"]?([^>'"]+)[^>]*>/i);

        if (src_base && src_base.length > 0) {
          base = src_base[src_base.length - 1];
        } else if (dest_base && dest_base.length > 0) {
          base = dest_base[dest_base.length - 1];
        }
        
        var base_element = document.createElement('base');
        base_element.href = base;
        document.head.appendChild(base_element);
        
        // Get inline styles.
        var styles = src.match(/<style[^>]*>(.*?)<\/style>/ig);
        
        if (styles) {
          for (var i = 0; i < styles.length; i++) {
            styles[i] = styles[i].replace(/<\/?style[^>]*>/ig, '');
            style = document.createElement('style');
            style.type = 'text/css';
            style.innerText = styles[i];
            document.head.appendChild(style);
          }
        }
        
        // Get referenced styles.
        var ref_styles = src.match(/<link[^>]*rel\s*=\s*["']?stylesheet["']?[^>]*href=["']?[^>'"]+["']?[^>]*>/ig);
        
        if (ref_styles) {
          for (var i = 0; i < ref_styles.length; i++) {
            ref_styles[i] = ref_styles[i].match(/href=["']?([^>'"]+)["']?/i)[1];
            ref_style = document.createElement('link');
            ref_style.rel = 'stylesheet';
            ref_style.type = 'text/css';
            ref_style.href = ref_styles[i];
            document.head.appendChild(ref_style);
          }
        }
        
        // Generate and insert diffed body.
        diff(url, getStrippedBody(src), getStrippedBody(dest));
      }
      
      $(function() {
        var url = atob(window.location.hash.substr(1));
        var src = getPageSetting(url, SETTINGS.page.html);
        $.get(url, function(html) {
          startDiff(url, src, html);
        });
      });
    </script>
    <style type="text/css">
      del {
        background: #d65 !important;
        color: black !important;
        text-decoration: none !important;
      }
      ins {
        background: #6d5 !important;
        color: black !important;
        text-decoration: none !important;
      }
      #chrome_page_monitor_ext_orig_link {
        position: fixed !important;
        bottom: 0px !important;
        right: 40px !important;
        width: 150px !important;
        height: 25px !important;
        background: white !important;
        border: 2px #849ccb solid !important;
        border-bottom: 0px !important;
        border-radius: 20px 20px 0px 0px !important;
        margin: 0px !important;
        padding: 0px !important;
        padding-top: 5px !important;
        text-align: center !important;
      }
      #chrome_page_monitor_ext_orig_link a:link,
      #chrome_page_monitor_ext_orig_link a:visited {
        font-family: Calibri, Tahoma, sans-serif !important;
        font-size: medium !important;
        font-weight: bold !important;
        color: #849ccb !important;
        text-decoration: underline !important;
        letter-spacing: 2px !important;
      }
      #chrome_page_monitor_ext_orig_link a:hover,
      #chrome_page_monitor_ext_orig_link a:focus {
        text-decoration: none !important;
      }
    </style>
  </head> 
  <body>
    <div style="font-family: Calibri, Tahoma, sans-serif; margin: auto; text-align: center; margin-top: 300px;">
      Diffing in progress...
      <br/>
      <img src="img/loader.gif">
    </div>
  </body>
</html>