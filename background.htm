<html>
  <script type="text/javascript" src="lib/jquery-1.4.1.js"></script> 
  <script type="text/javascript" src="monitor.js"></script>
  <script type="text/javascript">
    // Initializations to perform when the extension is first installed or
    // updated from a 1.x version. Includes importing and converting the pages
    // list.
    function firstRunInit() {
      var badge_color = getSetting('badge_color') || [0, 180, 0, 255];
      var timeout = getSetting('check_interval') || (180 * 60 * 1000);
      var pages = getSetting('pages_to_check') || {};
      
      deleteSetting('check_interval');
      deleteSetting('last_check');
      deleteSetting('pages_to_check');
      
      setSetting(SETTINGS.pages_list, []);
      
      $.each(pages, function(url, vals) {
        addPage(url, vals.name, vals.icon);
        setPageSetting(url, SETTINGS.page.regex, vals.regex);
        setPageSetting(url, SETTINGS.page.updated, false);
      });
      
      setSetting(SETTINGS.badge_color, badge_color);
      setSetting(SETTINGS.timeout, timeout);
      setSetting(SETTINGS.version, chrome.extension.getVersion());
    }
    
    // Initializations to perform on every startup. Schedules page and badge
    // updates.
    function routineInit() {
      var pages = getSetting(SETTINGS.pages_list);
      
      $.each(pages, function(i, url) {
        var timeout = getPageTimeout(url);
        var last_check = getPageSetting(url, SETTINGS.page.last_check);
        var time_since_check = (new Date()).getTime() - last_check;
        if (time_since_check >= timeout) {
          checkPage(url);
        } else {
          var timeout_id = setTimeout(function() {
            checkPage(url);
          }, timeout - time_since_check);
          setPageSetting(url, SETTINGS.page.timeout_id, timeout_id);
        }
      });
      
      scheduleBadgeUpdate();
    }
    
    // Main script.
    $.ajaxSetup({ timeout: 15000 });
    var version = getSetting(SETTINGS.version);
    if (version === null || version === undefined || !version.match(/^2\./)) {
      firstRunInit();
    }
    routineInit();
  </script>
</html>